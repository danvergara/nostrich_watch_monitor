package components

import (
	"fmt"
	"github.com/danvergara/nostrich_watch_monitor/pkg/presentation"
)

templ RelayTableRow(relay presentation.RelayTableViewModel) {
	<tr class="transition-colors hover:bg-gray-50 dark:hover:bg-gray-800">
		<!-- Status Column -->
		<td class="px-2 py-4">
			<div class="flex items-center justify-center">
				<div
					class={ "w-3 h-3 rounded-full",
                    templ.KV("bg-green-400", relay.IsOnline),
                    templ.KV("bg-red-400", !relay.IsOnline) }
				></div>
			</div>
		</td>
		<!-- Relay Info Column -->
		<td class="px-2 py-4">
			<div class="flex items-center space-x-3">
				<!-- Avatar -->
				<div class="w-8 h-8 rounded-full flex items-center justify-center text-xs font-medium text-white bg-gradient-to-br from-purple-500 to-blue-600">
					{ string([]rune(relay.Name)[0]) }
				</div>
				<!-- Name and URL -->
				<div class="min-w-0 flex-1">
					<div class="text-base md:text-lg lg:text-xl font-medium text-gray-900 dark:text-white truncate">
						{ relay.Name }
					</div>
					<div class="text-sm md:text-base text-gray-500 dark:text-gray-400 truncate">
						<button
							hx-get={ "/relay?url=" + relay.URL }
							hx-target="body"
							hx-push-url="true"
							class="inline-flex items-center px-2 py-1 rounded-md bg-purple-100 dark:bg-purple-900 
                                       text-purple-800 dark:text-purple-200 hover:bg-purple-200 dark:hover:bg-purple-800 
                                       transition-colors duration-200 font-mono text-xs"
						>
							<svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-1M14 4h6m0 0v6m0-6L10 14"
								></path>
							</svg>
							{ relay.URL }
						</button>
					</div>
				</div>
			</div>
		</td>
		<!-- Connection Time Column -->
		<td class="px-2 py-4">
			if relay.RTTOpen != nil {
				<span
					class={ "text-base md:text-lg font-medium",
                    templ.KV("text-green-600 dark:text-green-400", *relay.RTTOpen < 100),
                    templ.KV("text-yellow-600 dark:text-yellow-400", *relay.RTTOpen >= 100 && *relay.RTTOpen < 300),
                    templ.KV("text-red-600 dark:text-red-400", *relay.RTTOpen >= 300) }
				>{ fmt.Sprintf("%dms", *relay.RTTOpen) }</span>
			} else {
				<span class="text-base md:text-lg text-gray-500 dark:text-gray-400">N/A</span>
			}
		</td>
		<!-- NIP-11 Column -->
		<td class="px-2 py-4">
			if relay.NIP11Success != nil && *relay.NIP11Success {
				<div class="flex items-center space-x-1">
					<svg class="w-4 h-4 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
					</svg>
					if relay.RTTNIP11 != nil {
						<span class="text-base md:text-lg text-green-600 dark:text-green-400 font-medium">
							{ fmt.Sprintf("%dms", *relay.RTTNIP11) }
						</span>
					}
				</div>
			} else {
				<svg class="w-4 h-4 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
				</svg>
			}
		</td>
		<!-- Classification Column -->
		<td class="px-2 py-4">
			<span
				class={ "inline-flex px-2 py-1 text-sm md:text-base font-medium rounded-full",
                templ.KV("bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200", relay.Classification == "Public"),
                templ.KV("bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200", relay.Classification == "Paid"),
                templ.KV("bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200", relay.Classification == "WoT"),
                templ.KV("bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200", relay.Classification == "Private") }
			>
				{ relay.Classification }
			</span>
		</td>
		<!-- Last Check Column -->
		<td class="px-2 py-4">
			<div class="text-base md:text-lg text-gray-900 dark:text-white">
				{ relay.LastCheckTime }
			</div>
			<div
				class={ "text-sm md:text-base font-medium",
                templ.KV("text-green-600 dark:text-green-400", relay.IsOnline),
                templ.KV("text-red-600 dark:text-red-400", !relay.IsOnline) }
			>
				if relay.IsOnline {
					Online
				} else {
					Offline
				}
			</div>
		</td>
	</tr>
}
