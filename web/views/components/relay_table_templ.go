// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/danvergara/nostrich_watch_monitor/pkg/domain"
)

func RelayTable(relays []domain.RelayDisplayData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden\"><div class=\"overflow-x-auto\"><table class=\"w-full min-w-[1200px]\"><thead class=\"bg-gray-50 dark:bg-gray-800 sticky top-0 z-10\"><tr><th class=\"px-2 py-3 text-center text-sm md:text-base font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"><button class=\"flex items-center justify-center space-x-1 hover:text-gray-700 dark:hover:text-gray-300\"><span>Status</span></button></th><th class=\"px-2 py-3 text-left text-sm md:text-base font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"><button class=\"flex items-center space-x-1 hover:text-gray-700 dark:hover:text-gray-300\"><span>Relay</span> <svg class=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l4-4 4 4m0 6l-4 4-4-4\"></path></svg></button></th><th class=\"px-2 py-3 text-left text-sm md:text-base font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"><button class=\"flex items-center space-x-1 hover:text-gray-700 dark:hover:text-gray-300\"><span>Uptime</span> <svg class=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l4-4 4 4m0 6l-4 4-4-4\"></path></svg></button></th><th class=\"px-2 py-3 text-left text-sm md:text-base font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"><button class=\"flex items-center space-x-1 hover:text-gray-700 dark:hover:text-gray-300\"><span>Connection</span> <svg class=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l4-4 4 4m0 6l-4 4-4-4\"></path></svg></button></th><th class=\"px-2 py-3 text-left text-sm md:text-base font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"><button class=\"flex items-center space-x-1 hover:text-gray-700 dark:hover:text-gray-300\"><span>NIP-11</span></button></th><th class=\"px-2 py-3 text-left text-sm md:text-base font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"><button class=\"flex items-center space-x-1 hover:text-gray-700 dark:hover:text-gray-300\"><span>Type</span></button></th><th class=\"px-2 py-3 text-left text-sm md:text-base font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"><button class=\"flex items-center space-x-1 hover:text-gray-700 dark:hover:text-gray-300\"><span>Last Check</span></button></th></tr></thead> <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, relay := range relays {
			templ_7745c5c3_Err = RelayTableRow(relay).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</tbody></table></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
