version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-monitor}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      # Performance tuning
      POSTGRES_INITDB_ARGS: "--data-checksums"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-monitor}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - monitor

  redis:
    image: redis:8-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: >
      redis-server /usr/local/etc/redis/redis.conf
      --appendonly yes
      --appendfsync everysec
      --maxmemory ${REDIS_MAX_MEMORY:-256mb}
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 60
      --timeout 300
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - monitor

  migrations:
    build:
      context: .
      target: build
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NOSTRICH_WATCH_DB_HOST=postgres
      - NOSTRICH_WATCH_DB_PORT=5432
      - NOSTRICH_WATCH_DB_USER=postgres
      - NOSTRICH_WATCH_DB_PASSWORD=password
      - NOSTRICH_WATCH_DB_NAME=monitor
    entrypoint: ["go", "run", "main.go", "migrate", "up"]
    networks:
      - monitor

  seeder:
    build:
      context: .
      target: build
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    environment:
      - NOSTRICH_WATCH_DB_HOST=postgres
      - NOSTRICH_WATCH_DB_PORT=5432
      - NOSTRICH_WATCH_DB_USER=postgres
      - NOSTRICH_WATCH_DB_PASSWORD=password
      - NOSTRICH_WATCH_DB_NAME=monitor
    entrypoint: ["go", "run", "main.go", "seeds"]
    networks:
      - monitor

  job-scheduler:
    build:
      context: .
    depends_on:
      seeder:
        condition: service_completed_successfully
    environment:
      - NOSTRICH_WATCH_DB_HOST=postgres
      - NOSTRICH_WATCH_DB_PORT=5432
      - NOSTRICH_WATCH_DB_USER=postgres
      - NOSTRICH_WATCH_DB_PASSWORD=password
      - NOSTRICH_WATCH_DB_NAME=monitor
    entrypoint: ["/bin/monitor", "scheduler"]
    networks:
      - monitor

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  monitor:
